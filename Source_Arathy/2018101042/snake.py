'''
SNAKE
=====

This class denotes the snake mode of the hero (bonus) 
No documentation is currently available
'''

from person import person
from hero import hero
import global_stuff
from colored_printing import color_text
import numpy as np
from fire_balls import fire


class snake(hero):

    def __init__(self, x, y):
        '''
        initialise the width and start index of the snake
        '''
        super().__init__()
        self._w = self._y+2
        self._start_ind = 0
        self._type = "SnekHero"
        self._bal1 = fire()
        self._bal2 = fire()

    def change_shape(self):
        '''
        puts the autogenerated snake behind it in the shape array
        '''
        width = self._y+2
        self.release_balls()

        main_snake = np.full((2, width), ' ')
        # put hero at its location in the beginning
        for i in range(2):
            for j in range(2):
                main_snake[i][j] = global_stuff.hero[i][j]
        # fill in the remaining
        try:
            for column in range(width-2):
                for i in range(2):
                    main_snake[i][column +
                                  2] = global_stuff.snake_generator[i][(column+self._start_ind) % 10]
        except Exception as e:
            print(e)
        self._style = main_snake.tolist()
        self._start_ind += 1
        # print(self._w,self._h,self._shape)

    def print_direct(self):
        '''
        print the snake by creating a person 
        '''
        if(self.is_shield() == 1):
            self._type = "ShieldSnekHero"
        else:
            self._type = 'SnekHero'
        self.change_shape()
        p = person(self._x, self._y, 2, self._y+2, self._style, self._type)
        p.print_direct()
        self.make_both_exist()
        if(self._bal1.check_if_exists() == 1):
            self._bal1.print_direct()
        if(self._bal2.check_if_exists() == 1):
            self._bal2.print_direct()

    def release_balls(self):
        '''
        release those balls, filled with ice if it is not already deployed
        '''
        if(self._bal1.check_if_exists() == 0 and self._bal2.check_if_exists() == 0):
            self._bal1.deploy(self._x, self._y+6)
            self._bal2.deploy(self._x+1, self._y+6)

    def collision_manager(self, board):
        '''
        Manage the snake collisions
        '''
        saving = self._y
        self._y = 0
        self._w = saving+2
        super().collision_manager(board)
        self._y = saving

    def move_balls(self, board):
        '''
        Moves the balls right
        '''
        self._bal1.move_right(board, self._y)
        self._bal2.move_right(board, self._y)

    def make_both_exist(self):
        '''
        deletes both in case one of them disappears
        '''
        if(self._bal1.check_if_exists() == 0 or self._bal2.check_if_exists() == 0):
            self._bal1.erase_ball()
            self._bal2.erase_ball()
